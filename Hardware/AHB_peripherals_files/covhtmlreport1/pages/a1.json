var g_data = {
a4:{
scopes:[{link:'z.htm?f=0&s=4',val:'work.AHBGPIO'}]
,assertions:[{dummy:0},{cr:'c',c:'g',z:'check_dataout',fc:'Gr',pc:'Gr',h0:'0',h1:'1'}
,{cr:'c',c:'g',z:'check_dir',fc:'Gr',pc:'Gr',h0:'0',h1:'1'}
,{cr:'c',c:'g',z:'check_write',fc:'Gr',pc:'Gr',h0:'0',h1:'1'}
,{cr:'c',c:'g',z:'check_read_in',fc:'Gr',pc:'Gr',h0:'0',h1:'1'}
,{cr:'c',c:'g',z:'check_read_out',fc:'Gr',pc:'Gr',h0:'0',h1:'1'}
,{cr:'c',c:'g',z:'check_parity_out',fc:'Gr',pc:'Gr',h0:'0',h1:'1'}
,{cr:'c',c:'g',z:'check_parityerr_in',fc:'Gr',pc:'Gr',h0:'0',h1:'1'}
,{cr:'c',c:'g',z:'check_parityerr_out',fc:'Gr',pc:'Gr',h0:'0',h1:'1'}
],
},
a174:{
scopes:[{s:'7',b:'1',val:'AHBGPIO_top'},{link:'z.htm?f=0&s=174',val:'ahbgpio1'}]
,assertions:[{dummy:0},{cr:'c',c:'g',z:'check_dataout',fc:'Gr',pc:'Gr',h0:'0',h1:'1'}
,{cr:'c',c:'g',z:'check_dir',fc:'Gr',pc:'Gr',h0:'0',h1:'1'}
,{cr:'c',c:'g',z:'check_write',fc:'Gr',pc:'Gr',h0:'0',h1:'1'}
,{cr:'c',c:'g',z:'check_read_in',fc:'Gr',pc:'Gr',h0:'0',h1:'1'}
,{cr:'c',c:'g',z:'check_read_out',fc:'Gr',pc:'Gr',h0:'0',h1:'1'}
,{cr:'c',c:'g',z:'check_parity_out',fc:'Gr',pc:'Gr',h0:'0',h1:'1'}
,{cr:'c',c:'g',z:'check_parityerr_in',fc:'Gr',pc:'Gr',h0:'0',h1:'1'}
,{cr:'c',c:'g',z:'check_parityerr_out',fc:'Gr',pc:'Gr',h0:'0',h1:'1'}
],
},
dummyEnd:0
};
processAssertionsData(g_data,1);